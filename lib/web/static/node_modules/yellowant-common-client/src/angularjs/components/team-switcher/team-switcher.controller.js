export class TeamSwitcherController {
  constructor(UserApi, $window, $location) {
    this.UserApi = UserApi;
    this.$window = $window;
    this.$location = $location;

    this.isUserLoggedIn = false;
    this.currentTeam = { name: "Select Team" };
  }

  $onInit() {
    this.UserApi.getTeams()
      .then((response) => {
        this.allTeams = response.data.teams;
        if (this.allTeams.length != 0) {
          this.isUserLoggedIn = true;
          if (response.data.current) {
            this.currentTeam = response.data.current;
            this.currentTeamDomain = this.currentTeam.domain;
            this.allTeams = this.allTeams.filter((team) => (team.id != this.currentTeam.id));
          }
        }
      });
  }

  changeTeam(team) {
    var domainRegexp = /(.*\.)?(.+\..+)/g;
    var match = domainRegexp.exec(this.$location.host());
    var domain = match[match.length-1];
    if (this.appendUrl == null || this.appendUrl == "") {
      var appendUrlRegexp = new RegExp(".*" + domain + "(.+)");
      var match = appendUrlRegexp.exec(this.$location.absUrl());
      var appendUrl = match[1];
    } else {
      var appendUrl = this.appendUrl;
    }

    this.$window.location = this.$location.protocol() + "://" + team.domain + "." + domain + appendUrl;
  }
}